#include <stdio.h>
#include <string.h>

int main() {
	char a[10];
	char trailer[10];
	char ch[100];
	char f[10];
	char e[100];
	char esc[] = "esc";
	int i=0,j=0,k = 0,l=0;
	printf("Enter the characters :");
	scanf("%s", ch);
	printf("Enter a charcter that represents starting delimiter:");
	scanf("%s", a);
	printf("Enter a character that represents ending delimiter:");
	scanf("%s", trailer);
	printf("Enter a character that is to be stuffed:");
	scanf("%s", f);

	for (i = 0; i <strlen(a); i++) {
		e[k] = a[i];
		k++;
	}

	for (i = 0; i < strlen(ch); i++) {
		int count = 0;
		for ( j = i, l = 0; j < (i + strlen(a)); j++,l++) {
			if (ch[j] == a[l]) {
				count++;
			} else {
				break;
			}
		}
		if (count == strlen(a)) {
			for (int m = 0; m < strlen(f); m++) {
				e[k] = f[m];
				k++;
			}
		}
		count = 0;
		for ( j = i, l = 0; j < (i + strlen(trailer)); j++,l++) {
                        if (ch[j] == trailer[l]) {
                                count++;
                        } else {
                                break;
                        }
                }
                if (count == strlen(trailer)) {
                        for (int m = 0; m < strlen(f); m++) {
                                e[k] = f[m];
                                k++;
                        }
                }
		count = 0;
		for (j = i, l = 0; j < (i + strlen(esc)); j++,l++) {
                        if (ch[j] == esc[l]) {
                                count++;
                        } else {
                                break;
                        }
                }
                if (count == strlen(esc)) {
                        for (int m = 0; m < strlen(f); m++) {
                                e[k] = f[m];
                                k++;
                        }
                }
		 
		e[k] = ch[i];
		k++;
	

	for (int i = 0; i <strlen(trailer); i++) {
                e[k] = trailer[i];
                k++;
        }
	
	e[k] = '\0';

	printf("\nAfter Stuffing: %s\n", e);
	return 0;
}
}